import axios from "axios";
import { useEffect, useState } from "react";
import toast, { Toaster } from "react-hot-toast";

function Login() {
  const [password, setPassword] = useState("");
  const [email, setEmail] = useState("");
  const [userInfo, setUserInfo] = useState({});

  useEffect(() => {
    axios
      .post("https://reqres.in/api/login", userInfo)
      .then((res) => {
        console.log(res);
        toast.success("Login Successfully");
        return res;
      })
      .catch((error) => {
        toast.error("Your email or password is incorrect");
      });
  }, [userInfo]);

  const submitHandeler = (e) => {
    e.preventDefault();
    const newInfo = {
      email,
      password,
    };
    setUserInfo(newInfo);
  };

  //   {
  //     "email": "eve.holt@reqres.in",
  //     "password": "cityslicka"
  // }

  return (
    <div className="font-inter w-2/3 flex flex-col justify-between ">
      <h1 className="  font-bold text-[32px] text-[#355B3E] flex ">
        <svg
          width="40"
          height="36"
          viewBox="0 0 40 36"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M11.4515 24.4271C12.2451 24.8473 13.1498 25.0279 14.0498 24.9456C14.9499 24.8634 15.804 24.522 16.5027 23.9654C17.2014 23.4088 17.7128 22.6623 17.9712 21.8217C18.2297 20.9811 18.2234 20.0847 17.9532 19.2476C17.6108 18.1801 17.4888 17.0576 17.5943 15.9443C17.6997 14.831 18.0306 13.7489 18.5679 12.7599C19.1052 11.771 19.8384 10.8947 20.7253 10.1812C21.6123 9.46778 22.6357 8.93129 23.7368 8.60241C24.5907 8.34284 25.3465 7.84393 25.9089 7.16853C26.4714 6.49312 26.8154 5.67136 26.8977 4.80663C26.98 3.94191 26.7969 3.07287 26.3714 2.30895C25.946 1.54498 25.2971 0.920193 24.5066 0.513247C23.7161 0.106301 22.8192 -0.0646921 21.9289 0.0218829C21.0384 0.108404 20.1943 0.448559 19.5026 0.999598C18.8109 1.55058 18.3027 2.28782 18.0418 3.11848C17.7809 3.94913 17.779 4.83612 18.0364 5.6678C18.712 7.81493 18.4835 10.1344 17.4011 12.1185C16.3185 14.1025 14.4702 15.5896 12.2605 16.2543C11.3881 16.4998 10.6118 16.9937 10.032 17.6721C9.45225 18.3506 9.09566 19.1823 9.0085 20.0596C8.9214 20.937 9.10766 21.8195 9.54324 22.5929C9.97881 23.3664 10.6436 23.9951 11.4515 24.3977V24.4271ZM39.341 29.3132C39.0203 28.8178 38.6011 28.3894 38.1078 28.0531C37.6145 27.7168 37.0571 27.4793 36.4681 27.3544C34.2148 26.8458 32.2605 25.4923 31.0322 23.5898C29.8041 21.6872 29.4019 19.3902 29.9135 17.2008C30.1102 16.3545 30.0449 15.4708 29.7257 14.6604C29.4065 13.8501 28.8477 13.1494 28.1195 12.6463C27.3912 12.1431 26.526 11.8601 25.6324 11.8325C24.739 11.805 23.857 12.0343 23.0974 12.4916C22.3377 12.9489 21.7343 13.6138 21.3627 14.4029C20.9913 15.192 20.8683 16.0699 21.0093 16.9265C21.1503 17.7832 21.5491 18.5803 22.1554 19.2178C22.7617 19.8552 23.5486 20.3046 24.4173 20.5095C25.5411 20.7555 26.6038 21.2143 27.5445 21.8596C28.4852 22.5049 29.2854 23.324 29.8992 24.27C30.5131 25.216 30.9285 26.2703 31.1216 27.3724C31.3148 28.4744 31.2819 29.6027 31.0249 30.6925C30.8727 31.395 30.8998 32.1229 31.104 32.8129C31.3081 33.5029 31.6831 34.1339 32.1961 34.6511C32.7092 35.1682 33.3448 35.5558 34.0476 35.7799C34.7503 36.004 35.4989 36.058 36.228 35.937C36.9573 35.8161 37.6449 35.5239 38.2311 35.0861C38.8172 34.6481 39.2841 34.0778 39.5911 33.4246C39.898 32.7714 40.0357 32.0554 39.9921 31.3388C39.9485 30.6222 39.725 29.9268 39.341 29.3132ZM21.3807 24.1114C21.9285 23.8657 22.5213 23.7286 23.1244 23.708C23.8653 23.6897 24.5995 23.848 25.2629 24.1687C25.9262 24.4895 26.4984 24.9631 26.9295 25.5481C27.3606 26.1331 27.6374 26.8117 27.7357 27.5245C27.834 28.2374 27.7508 28.9627 27.4935 29.6372C27.236 30.3116 26.8123 30.9146 26.2592 31.3934C25.7062 31.8721 25.0407 32.2121 24.3209 32.3835C23.6012 32.5549 22.8491 32.5526 22.1304 32.3767C21.4118 32.2008 20.7486 31.8568 20.1987 31.3746C19.354 30.6136 18.3629 30.0218 17.2822 29.633C16.2014 29.2443 15.0522 29.0663 13.9005 29.1093C12.7488 29.1522 11.6171 29.4152 10.5702 29.8833C9.52341 30.3513 8.58204 31.0151 7.79999 31.8368C7.28592 32.3538 6.64925 32.7407 5.94553 32.9639C5.24186 33.1872 4.49253 33.2398 3.76303 33.1174C3.03354 32.995 2.34604 32.7012 1.76047 32.2616C1.17491 31.822 0.709169 31.25 0.403804 30.5955C0.0984401 29.941 -0.0371605 29.224 0.00872472 28.507C0.0546654 27.7899 0.280703 27.0947 0.667227 26.4819C1.0537 25.8692 1.58882 25.3576 2.22599 24.9917C2.86311 24.6258 3.58288 24.4168 4.32238 24.383C4.92316 24.3602 5.52261 24.4535 6.08585 24.6575C6.64914 24.8616 7.16498 25.1723 7.60345 25.5715C9.30042 27.0954 11.5502 27.9055 13.8608 27.8243C16.1714 27.7432 18.355 26.7776 19.934 25.1387C20.341 24.7062 20.8328 24.357 21.3807 24.1114Z"
            fill="#355B3E"
          />
        </svg>
        Travalizer
      </h1>
      <p className=" font-semibold text-[24px] text-[#355B3E]">
        Artificial Intelligence giving you travel recommendations
      </p>

      <form action="" onSubmit={submitHandeler} className="flex flex-col gap-4">
        <label htmlFor="email">Email:</label>
        <input
          className="w-full h-[56px] rounded-lg border border-[#355B3E] p-3"
          type="email"
          onChange={(e) => setEmail(e.target.value)}
          value={email}
        />
        <label htmlFor="password">password:</label>
        <input
          className="w-full h-[56px] rounded-lg border border-[#355B3E] p-3"
          type="password"
          onChange={(e) => setPassword(e.target.value)}
          value={password}
        />
        <input type="submit" className="w-1/2 h-[56px] rounded-lg text-white bg-[#029664]" value='Login' />
      </form>
      <Toaster position="top-center" reverseOrder={false} />
    </div>
  );
}

export default Login;
